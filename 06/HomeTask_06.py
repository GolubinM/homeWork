MENUC = '\033[93m'
ENDC = '\033[0m'  # цвета для меню
# ==================================================================================
print("Модуль 4. Строки. Списки. Часть 2")
print("Задание 1. Пользователь вводит с клавиатуры арифметическое выражение. Например, 23+12. вывести "
      "на экран результат вычислений выражения(Возможные операции: +, -,*,/).")
# -1. Первое что приходит в голову print(eval(string_1))/ Не поддаемся ...
# 1. Запрашиваем строку. Не проверяем на валидность.
# 2. Удаляем все пробелы в строке
# 3. Проверяем первый аргумент на отрицательное значение, если строка начинается со знака "-" используем второй
#    элемент списка генератора п.4 в качестве оператора
# 4. Определяем оператор в строке с помощью генератора нечисловых значений из имеющейся строки
# 5. Разделяем строку на три части методом partition. Разделитель - найденный ранее оператор.
# 6. Определяем тип арифметической операции и выполняем расчет
while True:
    string_1 = input(f"{MENUC}Введите строку с арифметическим выражением(возможные операции: +, -,*,/): \n" \
                     "(Enter - будут использованы строки по умолчанию)\n "
                     f"Q - выход: {ENDC}")
    if string_1.lower() == "q":
        print("Good buy!")
        break
    elif string_1 == "":
        string_1 = "2.7+12.4"
        print(f"{MENUC}Будет использована строка по-умолчанию:{ENDC} {string_1}")
    string_1 = string_1.replace(" ", "")
    index = 1 if string_1[0] == "-" else 0
    operator = [*(x for x in string_1 if not x.isnumeric() and x != ".")][index]
    list_argums = string_1.partition(operator)
    try:
        arg_1, arg_2 = float(list_argums[0]), float(list_argums[2])
    except:
        print(f"{MENUC}Не могу идентифицировать оператор или числовые значения.{ENDC}")
        continue
    if operator == "+":
        result = arg_1 + arg_2
    elif operator == "-":
        result = arg_1 - arg_2
    elif operator == "*":
        result = arg_1 * arg_2
    elif operator == "/":
        result = arg_1 / arg_2 if arg_2 != 0 else "попытка деления на 0"
    else:
        result = "Не могу определить оператор. Расчет не выполнен"
    if isinstance(result, str):  # исключаем ошибку форматирования строки спецификатором :.2f
        print(f"{MENUC}{result}{ENDC}")  # если result строка - выводим "как есть"
    else:
        print(
            # ограничиваем точность во избежания случайных погрешностей float
            f"{MENUC}Результат с точностью до сотых:{ENDC} {result:.2f}")
    # ==================================================================================

print("\nЗадание 2. В списке целых, заполненном случайными числами, определить минимальный и максимальный элементы, "
      "посчитать количество отрицательных элементов, посчитать количество положительных элементов, посчитать"
      " количество нулей. Результаты вывести на экран.")
# 1. Генерируем последовательность случайных целых чисел длинной 20 элементов в диапазоне от -100 до 100
# 2. Сохраняем последовательность в список numbers
# 3. Проходим циклом по списку numbers, собираем статистику по значениям элементов

import random

while True:
    numbers = list(random.randint(-100, 100) for x in range(20))
    min_num = numbers[0]
    max_num = numbers[0]
    count_minus = 0
    count_zero = 0
    count_plus = 0
    for num in numbers:
        if num < 0:
            count_minus += 1
        elif num > 0:
            count_plus += 1
        else:
            count_zero += 1
        min_num = min_num if min_num < num else num
        max_num = max_num if max_num > num else num
    print(
        f"\n{MENUC}Список случайны чисел:{ENDC} {numbers}\n{MENUC}Минимальное число:{ENDC} {min_num}\n"
        f"{MENUC}Максимальное число:{ENDC} {max_num}\n"
        f"{MENUC}Отрицательных чисел:{ENDC} {count_minus}\n{MENUC}Нулевых значений:{ENDC} {count_zero}\n"
        f"{MENUC}Положительных чисел:{ENDC} {count_plus}")
    if input(f"{MENUC}Чтобы повторить нажмите Enter, Q - выход: {ENDC}").lower() == "q":
        print("Good buy!")
        break
