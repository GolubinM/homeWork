# ЧАСТЬ 2.
# Множества

# Задание 1
# Есть множество, содержащее название стран. Необ-
# ходимо предоставить пользователю возможности:
#     Добавление стран;
#     Удаления стран;
#     Поиска стран по введенным символам;
#     Проверки существует ли страна внутри множества.

countries = {"Россия", "Грузия", "Аргентина", "ЮАР"}
print("Список стран:", countries)
while True:
    sel = input(
        "Что сделать: \n0.Выйти\n1.Добавить страну\n2.Удалить страну\n3.Найти страну"
        " по символам\n4.Проверить существует ли в списке страна: ")
    if sel == "0":
        print("Good buy!")
        break
    elif sel == "1":
        countries.add(input("Какую страну добавить: "))
        print(countries)
    elif sel == "2":
        countries.discard(input("Какую страну удалить: "))
        print(countries)
    elif sel == "3":
        symb = input("Введите символы по которым найти страну: ")
        found = [elm for elm in countries if symb.lower() in elm.lower()]
        print("Список стран содержащих последовательность введенных символов:", found)
    elif sel == "4":
        print('не' * (not input('Какую страну найти: ') in countries), "существует в множестве")

# Задание 2
# Существует два множества, содержащие названия
# городов. Необходимо создать третье множество, содер-
# жащее названия, которые есть в обоих множествах.

cities_1 = {"Рим", "Прага", "Будапешт", "Стокгольм", "Лиссабон"}
cities_2 = {"Рим", "Прага", "Будапешт", "Сидней", "Токио"}
cities_3 = cities_1.intersection(cities_2)
print(cities_1, cities_2)
print("1. Есть в обоих множествах", cities_3)

# Задание 3
# Существует два множества, содержащие названия
# городов. Необходимо создать третье множество, содер-
# жащее названия, которые есть в первом множестве, но
# нет во втором.

cities_1 = {"Рим", "Прага", "Будапешт", "Стокгольм", "Лиссабон"}
cities_2 = {"Рим", "Прага", "Будапешт", "Сидней", "Токио"}
cities_3 = cities_1 - cities_2
print("2. Есть в первом множестве, но нет во втором", cities_3)

# Задание 4
# Существует два множества, содержащие названия
# городов. Необходимо создать третье множество, содер-
# жащее названия, которые есть во втором множестве, но
# нет в первом.
cities_1 = {"Рим", "Прага", "Будапешт", "Стокгольм", "Лиссабон"}
cities_2 = {"Рим", "Прага", "Будапешт", "Сидней", "Токио"}
cities_3 = cities_2 - cities_1
print("3. Есть во втором множестве, но нет в первом", cities_3)

# Задание 5
# Существует два множества, содержащие названия
# городов. Необходимо создать третье множество, содер-
# жащее уникальные названия для каждого множества.
cities_1 = {"Рим", "Прага", "Будапешт", "Стокгольм", "Лиссабон"}
cities_2 = {"Рим", "Прага", "Будапешт", "Сидней", "Токио"}
cities_3 = cities_2 ^ cities_1
print("4. Уникальные названия для каждого множества", cities_3)

# Задание 6
# В словаре хранится набор пар: Название страны ->
# Столица. Нужно реализовать функциональность по до-
# бавлению, удалению, поиску и замене.

capitals = {"Россия": "Москва", "Грузия": "Тбилиси", "Аргентина": "Буэнос-Айрес", "ЮАР": "Кейптаун"}
print("Словарь стран и столиц:", capitals)
while True:
    sel = input(
        "Что сделать: \n0.Выйти\n1.Добавить элемент словаря\n2.Удалить элемент словаря\n3.Найти элемент словаря"
        "\n4.Заменить элемент словаря: ")
    if sel == "0":
        print("Good buy!")
        break
    elif sel == "1":
        new_elm = input("Введите через запятую пару ключ значение ").split(", ")
        capitals[new_elm[0]] = new_elm[1]
        print(capitals)
    elif sel == "2":
        if capitals.pop(input("Какую страну удалить: "), False):
            print(capitals)
        else:
            print("Такой страны в словаре нет")
    elif sel == "3":
        to_search = input("Введите ключ(страну) для которой найти значение(столицу): ")
        print("Найденный элемент:", capitals.get(to_search, f"{to_search} не найдено!"))
    elif sel == "4":
        to_update = input('Введите страну в которой изменить значения столицы: ')
        capitals.update({to_update: input("Введите новое значение столицы для страны: ")})
        print(capitals)
